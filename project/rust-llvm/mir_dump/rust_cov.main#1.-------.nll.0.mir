// MIR for `main` 0 nll

| Free Region Mapping
| '?0 | Global | ['?0, '?1]
| '?1 | Local | ['?1]
|
| Inferred Region Values
| '?0 | U0 | {bb0[0..=8], bb1[0..=2], bb2[0], '?0, '?1}
| '?1 | U0 | {bb0[0..=8], bb1[0..=2], bb2[0], '?1}
| '?2 | U0 | {bb0[3..=8]}
| '?3 | U0 | {bb0[3..=8]}
| '?4 | U0 | {bb0[3..=8]}
| '?5 | U0 | {bb0[3..=8]}
| '?6 | U0 | {bb0[3..=8]}
| '?7 | U0 | {bb0[3..=8]}
| '?8 | U0 | {bb0[3..=8]}
| '?9 | U0 | {bb0[3..=8]}
| '?10 | U0 | {bb0[3..=8]}
| '?11 | U0 | {bb0[3..=8]}
| '?12 | U0 | {bb0[3..=8]}
| '?13 | U0 | {bb0[3..=8]}
| '?14 | U0 | {bb0[3..=8]}
| '?15 | U0 | {bb0[3..=8]}
| '?16 | U0 | {bb0[3..=8]}
| '?17 | U0 | {bb0[3..=8]}
| '?18 | U0 | {bb0[3..=8]}
| '?19 | U0 | {bb0[3..=8]}
| '?20 | U0 | {bb0[3..=8]}
| '?21 | U0 | {bb0[3..=8]}
| '?22 | U0 | {bb0[3..=8]}
| '?23 | U0 | {bb0[3..=8]}
| '?24 | U0 | {bb0[3..=8]}
| '?25 | U0 | {bb0[4..=8]}
| '?26 | U0 | {bb0[5..=8]}
| '?27 | U0 | {bb0[6..=8]}
| '?28 | U0 | {bb0[6..=8]}
| '?29 | U0 | {bb0[7..=8]}
| '?30 | U0 | {bb0[7..=8]}
| '?31 | U0 | {bb0[6..=8]}
| '?32 | U0 | {bb0[6..=8]}
| '?33 | U0 | {bb0[5..=8]}
| '?34 | U0 | {bb0[5..=8]}
| '?35 | U0 | {}
| '?36 | U0 | {}
| '?37 | U0 | {}
| '?38 | U0 | {}
| '?39 | U0 | {}
| '?40 | U0 | {}
| '?41 | U0 | {}
| '?42 | U0 | {}
| '?43 | U0 | {}
| '?44 | U0 | {bb0[4..=8]}
| '?45 | U0 | {bb0[4..=8]}
| '?46 | U0 | {bb0[8]}
| '?47 | U0 | {bb0[8]}
|
| Inference Constraints
| '?0 live at {bb0[0..=8], bb1[0..=2], bb2[0]}
| '?1 live at {bb0[0..=8], bb1[0..=2], bb2[0]}
| '?23 live at {bb0[3]}
| '?24 live at {bb0[3]}
| '?25 live at {bb0[4]}
| '?26 live at {bb0[5]}
| '?27 live at {bb0[6]}
| '?28 live at {bb0[6]}
| '?29 live at {bb0[7..=8]}
| '?30 live at {bb0[7..=8]}
| '?31 live at {bb0[6]}
| '?32 live at {bb0[6]}
| '?33 live at {bb0[5]}
| '?34 live at {bb0[5]}
| '?44 live at {bb0[4]}
| '?45 live at {bb0[4]}
| '?46 live at {bb0[8]}
| '?47 live at {bb0[8]}
| '?2: '?16 due to Boring at Single(bb0[3]) (src/sort.rs:24:5: 28:6 (#4)
| '?3: '?15 due to Boring at Single(bb0[3]) (src/sort.rs:24:5: 28:6 (#4)
| '?4: '?18 due to Boring at Single(bb0[3]) (src/sort.rs:38:5: 42:6 (#17)
| '?5: '?17 due to Boring at Single(bb0[3]) (src/sort.rs:38:5: 42:6 (#17)
| '?6: '?20 due to Boring at Single(bb0[3]) (src/sort.rs:31:5: 35:6 (#11)
| '?7: '?19 due to Boring at Single(bb0[3]) (src/sort.rs:31:5: 35:6 (#11)
| '?8: '?22 due to Boring at Single(bb0[3]) (src/sort.rs:45:5: 49:6 (#23)
| '?9: '?21 due to Boring at Single(bb0[3]) (src/sort.rs:45:5: 49:6 (#23)
| '?10: '?14 due to Boring at Single(bb0[3]) (no-location (#29)
| '?11: '?12 due to Boring at Single(bb0[3]) (no-location (#29)
| '?12: '?23 due to Boring at Single(bb0[3]) (no-location (#29)
| '?13: '?24 due to Boring at Single(bb0[3]) (no-location (#29)
| '?14: '?13 due to Boring at Single(bb0[3]) (no-location (#29)
| '?15: '?10 due to Boring at Single(bb0[3]) (no-location (#29)
| '?16: '?3 due to Boring at Single(bb0[3]) (src/sort.rs:24:5: 28:6 (#4)
| '?17: '?10 due to Boring at Single(bb0[3]) (no-location (#29)
| '?18: '?5 due to Boring at Single(bb0[3]) (src/sort.rs:38:5: 42:6 (#17)
| '?19: '?10 due to Boring at Single(bb0[3]) (no-location (#29)
| '?20: '?7 due to Boring at Single(bb0[3]) (src/sort.rs:31:5: 35:6 (#11)
| '?21: '?10 due to Boring at Single(bb0[3]) (no-location (#29)
| '?22: '?9 due to Boring at Single(bb0[3]) (src/sort.rs:45:5: 49:6 (#23)
| '?23: '?12 due to Boring at Single(bb0[3]) (no-location (#29)
| '?23: '?44 due to Boring at Single(bb0[3]) (no-location (#29)
| '?24: '?13 due to Boring at Single(bb0[3]) (no-location (#29)
| '?24: '?45 due to Boring at Single(bb0[3]) (no-location (#29)
| '?25: '?33 due to Boring at Single(bb0[4]) (no-location (#29)
| '?26: '?31 due to Boring at Single(bb0[5]) (no-location (#29)
| '?27: '?29 due to Boring at Single(bb0[6]) (no-location (#29)
| '?28: '?30 due to Boring at Single(bb0[6]) (no-location (#29)
| '?28: '?32 due to Cast { unsize_to: Some(&'{erased} [&'{erased} test::TestDescAndFn]) } at Single(bb0[6]) (no-location (#29)
| '?29: '?46 due to CallArgument(Some(FnDef(DefId(20:841 ~ test[eaaf]::test_main_static), []))) at Single(bb0[8]) (no-location (#29)
| '?30: '?47 due to CallArgument(Some(FnDef(DefId(20:841 ~ test[eaaf]::test_main_static), []))) at Single(bb0[8]) (no-location (#29)
| '?31: '?27 due to Cast { unsize_to: Some(&'{erased} [&'{erased} test::TestDescAndFn]) } at Single(bb0[6]) (no-location (#29)
| '?32: '?28 due to Cast { unsize_to: Some(&'{erased} [&'{erased} test::TestDescAndFn]) } at Single(bb0[6]) (no-location (#29)
| '?33: '?26 due to Boring at Single(bb0[5]) (no-location (#29)
| '?34: '?32 due to Boring at Single(bb0[5]) (no-location (#29)
| '?44: '?25 due to Boring at Single(bb0[4]) (no-location (#29)
| '?45: '?34 due to Boring at Single(bb0[4]) (no-location (#29)
| '?47: '?46 due to BoringNoLocation at Single(bb0[8]) (no-location (#29)
|
fn main() -> () {
    let mut _0: ();
    let mut _1: &[&test::TestDescAndFn];
    let mut _2: &[&test::TestDescAndFn; 4];
    let _3: &[&test::TestDescAndFn; 4];
    let _4: [&test::TestDescAndFn; 4];
    let mut _5: &test::TestDescAndFn;
    let _6: &test::TestDescAndFn;
    let _7: test::TestDescAndFn;
    let mut _8: &test::TestDescAndFn;
    let _9: &test::TestDescAndFn;
    let _10: test::TestDescAndFn;
    let mut _11: &test::TestDescAndFn;
    let _12: &test::TestDescAndFn;
    let _13: test::TestDescAndFn;
    let mut _14: &test::TestDescAndFn;
    let _15: &test::TestDescAndFn;
    let _16: test::TestDescAndFn;
    let mut _17: &[&test::TestDescAndFn; 4];

    bb0: {
        StorageLive(_1);
        StorageLive(_2);
        StorageLive(_3);
        _17 = const main::promoted[0];
        _3 = &(*_17);
        _2 = &(*_3);
        _1 = move _2 as &[&test::TestDescAndFn] (PointerCoercion(Unsize));
        StorageDead(_2);
        _0 = test_main_static(move _1) -> [return: bb1, unwind: bb2];
    }

    bb1: {
        StorageDead(_1);
        StorageDead(_3);
        return;
    }

    bb2 (cleanup): {
        resume;
    }
}
