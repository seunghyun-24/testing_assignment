// MIR for `main` after PromoteTemps

fn main() -> () {
    let mut _0: ();
    let mut _1: &[&test::TestDescAndFn];
    let mut _2: &[&test::TestDescAndFn; 4];
    let _3: &[&test::TestDescAndFn; 4];
    let _4: [&test::TestDescAndFn; 4];
    let mut _5: &test::TestDescAndFn;
    let _6: &test::TestDescAndFn;
    let _7: test::TestDescAndFn;
    let mut _8: &test::TestDescAndFn;
    let _9: &test::TestDescAndFn;
    let _10: test::TestDescAndFn;
    let mut _11: &test::TestDescAndFn;
    let _12: &test::TestDescAndFn;
    let _13: test::TestDescAndFn;
    let mut _14: &test::TestDescAndFn;
    let _15: &test::TestDescAndFn;
    let _16: test::TestDescAndFn;
    let mut _17: &[&test::TestDescAndFn; 4];

    bb0: {
        StorageLive(_1);
        StorageLive(_2);
        StorageLive(_3);
        _17 = const main::promoted[0];
        _3 = &(*_17);
        _2 = &(*_3);
        _1 = move _2 as &[&test::TestDescAndFn] (PointerCoercion(Unsize));
        StorageDead(_2);
        _0 = test_main_static(move _1) -> [return: bb1, unwind: bb6];
    }

    bb1: {
        StorageDead(_1);
        goto -> bb2;
    }

    bb2: {
        goto -> bb3;
    }

    bb3: {
        goto -> bb4;
    }

    bb4: {
        goto -> bb5;
    }

    bb5: {
        StorageDead(_3);
        return;
    }

    bb6 (cleanup): {
        goto -> bb7;
    }

    bb7 (cleanup): {
        goto -> bb8;
    }

    bb8 (cleanup): {
        goto -> bb9;
    }

    bb9 (cleanup): {
        goto -> bb10;
    }

    bb10 (cleanup): {
        resume;
    }
}
